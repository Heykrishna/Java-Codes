

class Result {
    static int intervalScheduling(int[] start, int[] end) {
      int n = start.length;
      int[][] intervals = new int[n][2];
      // Combine start and end times into intervals
      for (int i = 0; i < n; i++) {
        intervals[i][0] = start[i];
        intervals[i][1] = end[i];
      }
      // Sort intervals based on end times
      Arrays.sort(intervals, (a, b) -> a[1] - b[1]);
      int count = 1;
      int lastEnd = intervals[0][1];
      // Find non-overlapping intervals
      for (int i = 1; i < n; i++) {
        if (intervals[i][0] >= lastEnd) {
          count++;
          lastEnd = intervals[i][1];
        }
      }
      return count;
    }
  }