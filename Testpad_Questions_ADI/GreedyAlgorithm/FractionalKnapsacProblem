

class Result {
    static class Item implements Comparable<Item> {
        int val, weight;
        Item(int val, int weight) {
            this.val = val;
            this.weight = weight;
        }
        double ratio() {
            return (double) val / weight;
        }
        public int compareTo(Item other) {
            return Double.compare(other.ratio(), ratio());
        }
    }
    static double fractionalKnapsack(int val[], int weight[], int n, int capacity) {
        Item items[] = new Item[n];
        for (int i = 0; i < n; i++) {
            items[i] = new Item(val[i], weight[i]);
        }
        Arrays.sort(items);
        double maxValue = 0.0;
        for (Item item : items) {
            if (capacity >= item.weight) {
                capacity -= item.weight;
                maxValue += item.val;
            } else {
                double fraction = (double) capacity / item.weight;
                maxValue += item.val * fraction;
                break;
            }
        }
        return maxValue;
    }
}