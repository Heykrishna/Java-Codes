/* 
 *  class Node {
 *    int data;
 *    Node left; 
 *    Node right;
 *    public Node() {
 *      data = 0;
 *    }
 *    public Node(int d)  {
 *      data = d;
 *    }
 *  }
 *
 *  The above class defines a tree node.
 */
class Result {
    static int areSameTree(Node t1, Node t2) {
        if (t1 == null && t2 == null) {
            return 1; // Both trees are empty
        }
        if (t1 == null || t2 == null) {
            return 0; // One tree is empty, the other is not
        }
        if (t1.data != t2.data) {
            return 0; // Node values are different
        }
        // Recursively check left and right subtrees
        return areSameTree(t1.left, t2.left) == 1 && areSameTree(t1.right, t2.right) == 1 ? 1 : 0;
    }
}